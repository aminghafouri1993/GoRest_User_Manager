@model List<GoRestUserManager.Models.UserViewModel>

<div class="container mt-4">
    <h2 class="mb-4 text-primary">👥 Kullanıcı Listesi</h2>

    <table class="table table-striped table-hover shadow-sm rounded border">
        <thead class="table-dark">
            <tr>
                <th>Ad</th>
                <th>Email</th>
                <th>Cinsiyet</th>
                <th>Durum</th>
                <th style="width: 150px;">İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td>@user.Gender</td>
                    <td>@user.Status</td>
                    <td>
                        <button class="btn btn-sm btn-outline-warning edit-btn me-1" data-id="@user.Id">
                            <i class="bi bi-pencil-square"></i> Düzenle
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="@user.Id">
                            <i class="bi bi-trash"></i> Sil
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="card mt-5 shadow-sm">
        <div class="card-body">
            <partial name="_Create" model="new GoRestUserManager.Models.UserViewModel()" />
        </div>
    </div>
</div>

<!-- Düzenleme Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content shadow">
            <form id="editForm">
                <div class="modal-header bg-secondary text-white">
                    <h5 class="modal-title">Kullanıcıyı Düzenle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editId" name="Id" />
                    <div class="mb-3">
                        <label>Ad</label>
                        <input type="text" class="form-control" name="Name" id="editName" />
                    </div>
                    <div class="mb-3">
                        <label>Email</label>
                        <input type="email" class="form-control" name="Email" id="editEmail" />
                    </div>
                    <div class="mb-3">
                        <label>Cinsiyet</label>
                        <select class="form-select" name="Gender" id="editGender">
                            <option value="male">Erkek</option>
                            <option value="female">Kadın</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label>Durum</label>
                        <select class="form-select" name="Status" id="editStatus">
                            <option value="active">Aktif</option>
                            <option value="inactive">Pasif</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-success">Kaydet</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            // Yeni kullanıcı ekle
            $('#createForm').on('submit', function (e) {
                e.preventDefault();
                $.ajax({
                    url: '/User/Create',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function () {
                        $('#resultMessage').html('<div class="alert alert-success">Kullanıcı eklendi!</div>');
                        $('#createForm')[0].reset();
                        setTimeout(() => location.reload(), 1000);
                    },
                    error: function (xhr) {
                        let msg = "Hata oluştu!";
                        if (xhr.status === 422 || xhr.status === 400) {
                            msg = "Geçersiz veri girdiniz.";
                        }
                        $('#resultMessage').html(`<div class="alert alert-danger">${msg}</div>`);
                    }
                });
            });

            // Düzenle butonu
            $('.edit-btn').on('click', function () {
                var row = $(this).closest('tr');
                $('#editId').val($(this).data('id'));
                $('#editName').val(row.find('td:eq(0)').text());
                $('#editEmail').val(row.find('td:eq(1)').text());
                $('#editGender').val(row.find('td:eq(2)').text());
                $('#editStatus').val(row.find('td:eq(3)').text());
                $('#editModal').modal('show');
            });

            // Güncelleme işlemi
            $('#editForm').on('submit', function (e) {
                e.preventDefault();
                $.ajax({
                    url: '/User/Edit',
                    type: 'PUT',
                    data: $(this).serialize(),
                    success: function () {
                        alert('Kullanıcı güncellendi!');
                        location.reload();
                    },
                    error: function () {
                        alert('Güncelleme sırasında hata oluştu.');
                    }
                });
            });

            // Silme işlemi
            $('.delete-btn').on('click', function () {
                if (!confirm("Bu kullanıcıyı silmek istediğinize emin misiniz?")) return;
                var userId = $(this).data('id');
                $.ajax({
                    url: '/User/Delete/' + userId,
                    type: 'DELETE',
                    success: function () {
                        alert("Kullanıcı silindi!");
                        location.reload();
                    },
                    error: function () {
                        alert("Silme işlemi başarısız oldu.");
                    }
                });
            });
        });
    </script>
}
